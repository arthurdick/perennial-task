#!/usr/bin/env php
<?php

// Perennial Task - Main Controller Script
// This script validates dependencies and dispatches commands to the appropriate PHP scripts.
const VERSION = '1.2.2';
const MIN_PHP_VERSION = '7.4';

/**
 * --- Pre-flight Checks ---
 * Ensures the environment meets the application's requirements.
 */
function run_preflight_checks(): void
{
    // Check for minimum PHP version.
    if (version_compare(PHP_VERSION, MIN_PHP_VERSION, '<')) {
        file_put_contents('php://stderr', "Error: Your PHP version is " . PHP_VERSION . ". Perennial Task requires PHP version " . MIN_PHP_VERSION . " or higher.\n");
        exit(1);
    }

    // Check for required SimpleXML extension.
    if (!extension_loaded('SimpleXML')) {
        file_put_contents('php://stderr', "Error: The required PHP extension 'SimpleXML' is not enabled.\n");
        file_put_contents('php://stderr', "Please install or enable it to use Perennial Task (e.g., 'sudo apt-get install php-xml').\n");
        exit(1);
    }
}

/**
 * --- Help Message ---
 * Displays the help text for the application.
 */
function display_help(): void
{
    echo "Perennial Task - A simple command-line task manager.\n";
    echo "\n";
    echo "Usage: prn [command] [argument]\n";
    echo "\n";
    echo "Commands:\n";
    echo "  create             Interactively create a new task.\n";
    echo "  edit [task_file]   Edit a task. Select from a list or specify a file.\n";
    echo "  complete [task_file] Mark a task as complete.\n";
    echo "  describe [task_file] Show a detailed description of a task.\n";
    echo "  history [task_file]  Show the full completion history of a single task.\n";
    echo "  report [date]      Show a report of all due and upcoming tasks.\n";
    echo "  help               Show this help message.\n";
    echo "  version            Display the application version.\n";
}

/**
 * --- Main Application Logic ---
 */
function main(array $argv): void
{
    run_preflight_checks();
    $app_dir = dirname(realpath(__FILE__));
    
    $command = $argv[1] ?? null;
    switch ($command) {
        case 'create':
        case 'edit':
        case 'complete':
        case 'describe':
        case 'history':
        case 'report':
            $script_name = "$command.php";
            $script_path = "{$app_dir}/{$script_name}";
            $arguments = array_slice($argv, 2);

            $filepath_arg = null;
            $filepath_key = null;
            
            // Find the first non-option argument and treat it as the filepath.
            foreach ($arguments as $key => $arg) {
                if (!str_starts_with($arg, '-')) {
                    $filepath_arg = $arg;
                    $filepath_key = $key;
                    break;
                }
            }
            
            // All other arguments are options.
            $options_args = $arguments;
            if ($filepath_key !== null) {
                unset($options_args[$filepath_key]);
            }
            
            // Rebuild the final arguments list: options first, then the filepath.
            $final_args = array_values($options_args);
            if ($filepath_arg !== null) {
                $final_args[] = $filepath_arg;
            }
            
            $escaped_arguments = array_map('escapeshellarg', $final_args);
            $exec_command = "php " . escapeshellarg($script_path) . " " . implode(' ', $escaped_arguments);
            
            passthru($exec_command, $return_var);
            exit($return_var);

        case 'help':
        case '--help':
        case '-h':
            display_help();
            break;

        case 'version':
        case '--version':
        case '-v':
            echo "Perennial Task version " . VERSION . "\n";
            break;

        default:
            if (is_null($command)) {
                file_put_contents('php://stderr', "Error: No command provided.\n");
            } else {
                file_put_contents('php://stderr', "Error: Unknown command '$command'.\n");
            }
            file_put_contents('php://stderr', "Use 'prn help' to see a list of available commands.\n");
            exit(1);
    }
}

// Run the application.
main($argv);
